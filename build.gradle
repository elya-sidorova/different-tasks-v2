
plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id "org.jetbrains.kotlin.plugin.serialization" version "$kotlin_version"
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1")
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.4.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinx_coroutines_version")
    //ktor
    implementation("io.ktor:ktor-client-cio-jvm:2.1.3")
    //DB
    runtimeOnly("org.jetbrains.exposed:exposed-jdbc:$exposed_version")
    implementation("org.jetbrains.exposed:exposed-dao:$exposed_version")
    implementation("com.h2database:h2:$h2_version")
    implementation("org.postgresql:postgresql:$postgresql_version")
    //apache-commons
    implementation("commons-validator:commons-validator:1.7")
    implementation("commons-codec:commons-codec:1.15")
    implementation("org.apache.commons:commons-text:1.10.0")

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version")
    implementation("com.squareup.moshi:moshi-kotlin:1.14.0")
    implementation("com.squareup.okhttp3:okhttp:$okhttp3_version")
    implementation("com.github.avro-kotlin.avro4k:avro4k-core:$avro_kotlin_version")
    implementation("com.github.ben-manes.caffeine:caffeine:3.1.2")
    implementation("io.arrow-kt:arrow-core:1.1.3")

    implementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "$JVM_TARGET_VERSION"
        freeCompilerArgs = ["-Xplugin=/Users/elvirasidorova/projects/compiler-plugin/build/libs/compiler-plugin.jar",
                             "-P", "plugin:arrow.meta.plugin.compiler:generatedSrcOutputDir=${buildDir}"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "$JVM_TARGET_VERSION"
    }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes("Main-Class": "org.hyperskill.gradleapp.App")
    }
}